default:
  image: node:16
  cache: &npm-cache
    key:
      files:
        - package-lock.json
    policy: pull
    paths:
      - node_modules/

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID # MRs,
    - if: $CI_COMMIT_REF_PROTECTED == "true" # protected branches
    - if: $CI_PIPELINE_SOURCE == "web" # if triggered from gitlab web UI
    - if: $CI_PIPELINE_SOURCE == "pipeline" # if triggered by another pipeline
    - if: $STRINGS_SCHEDULE # if triggered from a schedule

stages:
  - pre-install
  - install
  - pre-build-test
  - publish

# pre-install
#------------------------------------------------------------------------------
title-check:
  stage: pre-install
  allow_failure: false
  script:
    - >
      (echo "$CI_MERGE_REQUEST_TITLE" | \
        grep -Eq "^(Draft:\s|WIP:\s)?(Fix|Update|Breaking|New|Docs|Build|Tests|Upgrade|Chore):\s+(\(FEATURE-FLAGGED\))?(.*)\((no)?refs?:?\s?(.*)\).*") \
        && (echo "\e[32mMR Title formatted correctly\e[0m"; exit 0) \
        || (echo "\e[31mMR Title not formatted correctly, correct format is:"; \
            echo "\"Tag: Descriptive title (refs: US123456)\""; \
            echo "Where Tag is one of: Fix, Update, Breaking, New, Docs, Build, Tests."; \
            echo "Detailed regex explanation located here: https://git.alteryx.com/d2/dwf/dwf-client/uploads/ba76617ec7a81c858e2645b92c8e443e/image.png\e[0m"; \
            exit 1;)
  rules:
    - if: $CI_MERGE_REQUEST_ID

# install
#------------------------------------------------------------------------------
npm-install:
  stage: install
  script:
    - if [ ! -d "./node_modules" ]; then npm ci; fi
  cache:
    <<: *npm-cache
    policy: pull-push # we always want to push new cache for npm-install

# pre-build-test
#------------------------------------------------------------------------------
lint:
  stage: pre-build-test
  script:
    - npm run lint

# publish
#------------------------------------------------------------------------------
semantic-release:
  stage: publish
  image: $CI_REGISTRY/harris-miller/semantic-release-image
  script:
    - semantic-release # this bin is available via the docker image
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true"
